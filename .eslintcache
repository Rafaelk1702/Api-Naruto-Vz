[{"C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\index.js":"1","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\App.js":"2","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\reportWebVitals.js":"3","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\Search.js":"4","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\chars.js":"5","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\i18n\\config.js":"6","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\donation\\Form.js":"7","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\Home.js":"8","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\donation\\BotonDonation.js":"9"},{"size":542,"mtime":1693322365770,"results":"10","hashOfConfig":"11"},{"size":671,"mtime":1700856954035,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1692979456467,"results":"13","hashOfConfig":"11"},{"size":1113,"mtime":1692979456394,"results":"14","hashOfConfig":"11"},{"size":3143,"mtime":1693431734274,"results":"15","hashOfConfig":"11"},{"size":506,"mtime":1693323923870,"results":"16","hashOfConfig":"11"},{"size":7208,"mtime":1704214758379,"results":"17","hashOfConfig":"11"},{"size":7759,"mtime":1700856987714,"results":"18","hashOfConfig":"11"},{"size":590,"mtime":1700857321919,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ll924j",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\index.js",[],["44","45"],"C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\App.js",["46","47"],"\r\nimport {Component} from 'react'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter,Link, Route, Routes } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport FormDonation from './donation/Form';\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div>\r\n          <BrowserRouter >     \r\n          <Routes>\r\n              <Route path=\"/\" element={<Home/>} />       \r\n              <Route path=\"/index\" element={<FormDonation/>} />           \r\n          </Routes>         \r\n          </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\reportWebVitals.js",[],"C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\Search.js",[],"C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\chars.js",["48","49"],"import {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18n from './i18n/config';\r\n\r\nclass Chars extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { imageSrcExist: true  };\r\n      }\r\n    \r\n      handleImageLoaded() {\r\n        this.setState({ imageStatus: \"loaded\", error: false });\r\n      }\r\n    \r\n      handleImageError() {\r\n        this.setState({ imageStatus: \"failed to load\", error: true });\r\n      }\r\n      handleImageError = () => {\r\n        this.setState({imageSrcExist: false})\r\n        }\r\n    render(){\r\n        //let image_url= 'https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg';\r\n        //console.log(this)\r\n        const changeLanguage = () =>{\r\n          i18n.changeLanguage(\"en\")\r\n         }\r\n         \r\n        return(\r\n            <div>\r\n                \r\n                    <Card style={{width:'16rem' }}> \r\n                        {/* <Card.Img variant='top' src={this.props.picture} alt='Hola' onerror = \"this.onerror = null; this.src = 'https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg'; \" height='300px'/ > */}\r\n                        {/* funciona para error 403 <Card.Img variant='top' src={this.props.picture} onError={(e)=>{e.target.onerror = null; e.target.src=\"https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg\"}} height='300px'/ > */}\r\n                        {/* igual para error 403 <Card.Img variant='top' src={this.props.picture} ref={img => this.img = img} onError={() => this.img.src = 'https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg'} height='300px'/ > */}\r\n                        {/* igual pero evitar bucle infinito <Card.Img variant='top' src={this.props.picture} onError={(e)=>{ if (e.target.src !== this.props.picture ){ e.target.onerror = null; e.target.src=\"https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg\"; } }}  height='300px'/ > */}\r\n                        {/* funciona para imagenes en null || <Card.Img variant='top' src={this.props.picture || 'https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg'} height='300px'/ > */}\r\n                        <Card.Img variant='top' src={this.props.picture || 'https://i.pinimg.com/564x/04/38/75/0438751d493c84b2ef88e8f28d6aa237.jpg'} alt='Imagen no disponible' height='250px'/>\r\n                        \r\n                        \r\n                        <Card.Body>\r\n                            <Card.Title>{this.props.title}</Card.Title>\r\n                            <Card.Text>{this.props.description}</Card.Text>\r\n                            <a href={this.props.href} target=\"_blank\" rel=\"charct\">\r\n                              <Button variant=\"primary\">{this.props.button}</Button>\r\n                            </a>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                \r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default withTranslation()(Chars);","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\i18n\\config.js",[],"C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\donation\\Form.js",["50","51","52"],"import {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/style.css';\r\nimport Img from './img/portada.PNG'\r\nimport { useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass FormDonation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            donante: '',\r\n            mensaje: '',\r\n            emailDonante : '',      \r\n            montoDonation : '5'\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n            \r\n      }\r\n    //   componentDidMount () {\r\n    //     const script = document.createElement(\"script\");\r\n    \r\n    //     script.src = \"js/miScript.js\";\r\n    //     script.async = true;\r\n    \r\n    //     document.body.appendChild(script);\r\n    // }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n      handleSubmit(event) {\r\n        \r\n        event.preventDefault();\r\n        // alert('Your favorite flavor is: ');\r\n        // console.log('handle');\r\n       // document.getElementById('myForm').submit(); //habilitar para donaciones fuera de Venezuela\r\n        \r\n      }\r\n      renderSubmit(){\r\n        if(this.state == null){\r\n            return;\r\n        }\r\n        \r\n        return(\r\n            console.log('exito')\r\n        )\r\n      }\r\n\r\n    render() {\r\n      \r\n        \r\n    return(\r\n        <div>\r\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"/>\r\n                <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap\" rel=\"stylesheet\"/>\r\n\r\n            <section class=\"section\">\r\n            <div class=\"container\" >\r\n\r\n            <div class=\"row mb-5\">\r\n                <div class=\"col-md-12 img\">\r\n                <img src={Img} class=\"img-fluid\" alt=\"\"/>\r\n                \r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row justify-content-md-center\">\r\n                <div class=\"col-lg-7 col-md-7 text-lg-left text-center\">\r\n                <div class=\"p-5 shadow rounded content createcuentaUser\">\r\n                    <h2 class=\"section-title text-center\">Mi Donaci√≥n</h2>\r\n                    \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"para\" value=\"Silvano Lopez\" hidden/>\r\n\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-12\">\r\n                        <label htmlFor=\"donante\">Nombre del Donante</label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"donante\" value={this.state.donante} onChange={this.handleInputChange} required autoFocus/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-12\">\r\n                        <label htmlFor=\"mensaje\">Mensaje</label>\r\n                        <input type=\"text\" class=\"form-control comentarioGrupo\" name=\"mensaje\" value={this.state.mensaje} onChange={this.handleInputChange} required/>\r\n                        <label htmlFor=\"mensaje\" class=\"label label-important\"></label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                        <label htmlFor=\"emailDonante\">Email</label>\r\n                        <input type=\"email\" class=\"form-control\" name=\"emailDonante\" value={this.state.emailDonante} onChange={this.handleInputChange} required/>\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                        <label htmlFor=\"montoDonation\">Cantidad para donar</label>\r\n                            <select name=\"montoDonation\" id=\"montoDonation\" onChange={this.handleInputChange} class=\"form-control custom-select\" required>\r\n                            {/* <option defaultValue disabled> -- Seleccione --</option> */}\r\n                            <option value={this.state.montoDonation}>$5</option>\r\n                            <option value={this.state.montoDonation}>$10</option>\r\n                            <option value={this.state.montoDonation}>$20</option>\r\n                            <option value={this.state.montoDonation}>$25</option>\r\n                            <option value={this.state.montoDonation}>$50</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                    {/* <div class=\"col-md-12 mt-3 mb-5 text-center\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\" id=\"sendDonation\">\r\n                        Enviar Donaci√≥n \r\n                        </button>\r\n                    </div> */}\r\n                    <div class=\"col-md-12 mt-3 mb-5 text-center\">\r\n                        <button class=\"btn btn-primary\" id=\"sendDonation\" disabled>\r\n                        Donaci√≥n no disponible \r\n                        </button>\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-12\">\r\n                        <label htmlFor=\"donante\">Direcci√≥n Billetera Bitcoin (BTC) Disponible:</label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"donante\" value=\"18FbTZpSh5ubx6x5G8VJRF3eBFzBT8bgS4\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"respuesta\"></div>\r\n                    </form>\r\n\r\n                    <form name=\"myForm\" id=\"myForm\" action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"POST\">\r\n                        <input type=\"hidden\" name=\"cmd\" value=\"_donations\"/>\r\n                        <input type=\"hidden\" name=\"business\" value=\"totoelgeneroso45@hotmail.com\"/>\r\n                        <input type=\"hidden\" name=\"item_name\" value=\"Donacion\"/>\r\n                        <input type=\"hidden\" name=\"item_number\" value=\"\"/>\r\n                        <input type=\"hidden\" name=\"amount\" value=\"\"/>\r\n                        <input type=\"hidden\" name=\"no_shipping\" value=\"0\"/>\r\n                        <input type=\"hidden\" name=\"no_note\" value=\"1\"/>\r\n                        <input type=\"hidden\" name=\"currency_code\" value=\"USD\"/>\r\n                        <input type=\"hidden\" name=\"lc\" value=\"AU\"/>\r\n                        <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF\"/>\r\n                        <input type=\"submit\" value=\"Submit\" hidden/>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </section>\r\n\r\n\r\n            <script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script>\r\n            {/* <script src=\"js/miScript.js\"> </script> */}\r\n\r\n            \r\n</div>\r\n        );\r\n\r\n    }\r\n}\r\nexport default FormDonation;","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\Home.js",["53","54","55","56","57","58","59"],"import {Component} from 'react'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport {Container,Row,Col} from 'react-bootstrap';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport BotonDonation from './donation/BotonDonation';\r\n//import * as characters from './i18n/locales/es/characters.json';\r\nimport Chars from './chars';\r\nimport Search from './Search';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Suspense } from 'react';\r\nimport i18n from './i18n/config';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        characters: i18n.store.data.es.translations.data,\r\n        characterfind: '',\r\n        page:1,\r\n        idChar : 1,\r\n        over:0,\r\n        button_char: 'Ver detalles',\r\n        href: 'https://naruto.fandom.com'\r\n      }\r\n    }\r\n    CharacterFind=(e)=>{\r\n      let string1 = e.charAt(0).toUpperCase(); //tomamos el primer caracter y lo convertirmos a mayuscula\r\n      let string2 = e.substring(1,e.length); // desde el segundo caracter\r\n      let value = string1 + string2; //unimos\r\n      this.setState({characterfind: value});   \r\n      // console.log(string1);\r\n      // console.log(string2);\r\n      // console.log(value);\r\n    }\r\n    Traductor(){\r\n      \r\n      //const {t, i18n} = useTranslation([\"Characters\"]);\r\n  \r\n    }\r\n    //fetch\r\n    componentDidMount(){\r\n      //fetch('https://naruto-api-prod.herokuapp.com/v1/characters')\r\n      //.then(response => response.json())\r\n     // .then(data => this.setState({characters: data.data}))\r\n    }\r\n    //\"id\":3413 brinca a id\":3417 entre muchos otros por lo que no hay 3983 characters\r\n    // si no 1252, por lo que hay que tener en cuenta mientras iteramos.\r\n      /*la sentencia del return tiene que estar al laodo paera que funcione */\r\n    recordCount(ch,key){\r\n      var hrefp = this.state.href + ch.href;\r\n      //console.log(hrefp);\r\n      var record = (  <Chars\r\n            key={key} id={ch.id} title={ch.title} href={hrefp}\r\n            picture= {ch.thumbnail} description={ch.description.text}\r\n            button= {this.state.button_char}\r\n            />\r\n      )\r\n        return record;\r\n      }\r\n    idPage = (num,active,e) => {\r\n      for (let index = 0; index < num+1; index++){\r\n        if (e.target.text == index ){\r\n          // CharacterTemp = CharacterTemp[index];\r\n          active = index;\r\n          this.setState({idChar:index, characterfind:'', over: index });\r\n          //solo llamo a un state y modifico varios. no puedo llamar a varios state\r\n        //  console.log(this.state.characterfind)\r\n         }\r\n      }\r\n    }\r\n    \r\n    render(){\r\n     \r\n       var page = 0;\r\n       var num = 0;\r\n       var i = 0;\r\n       var over = 0;\r\n       var items =[];\r\n       var CharacterTemp =[];\r\n       var active= 0;\r\n       var limit = 21;\r\n       //var limit2 = 21;   \r\n       var itemsCharacters = [];\r\n       var find = [];\r\n       const changeLanguage = () =>{\r\n        //i18n.changeLanguage(\"en\")\r\n        this.setState ({ characters: i18n.store.data.en.translations.data, button_char: 'See details'});\r\n       }\r\n       //var over2= false;\r\n        //console.log(this.state);\r\n      \r\n  {this.state.characters.map((ch,key) =>{\r\n          if (ch.title.includes(this.state.characterfind)){\r\n            var hrefp = this.state.href + ch.href; \r\n          find.push(<Col key={key}>\r\n              {/* <br/> */}  \r\n                 \r\n                <Chars\r\n                key={key} id={ch.id} title={ch.title} href={hrefp}\r\n                picture= {ch.thumbnail} description={ch.description.text}\r\n                button= {this.state.button_char} href_ini= {this.state.href}\r\n                />        \r\n              {/* find2.push = [...find]; */}\r\n            </Col>)\r\n            // console.log(find)\r\n          }\r\n        CharacterTemp.push (this.recordCount(ch,key));\r\n        page++;\r\n            // this.state.characters.length-1 == key esto para que incluya los sobrantes.es decir no solo por lotes de 21, pues los 14 restantes no entrarian en la condicion page===limit, por lo q si this.state.characters.length-1 == key estaria diciendo si el arreglo llego a su fin, q me incuya esos restantes q no entraron en la condicion primera page===limit\r\n        if (page===limit || this.state.characters.length-1 == key){\r\n          i++;\r\n          itemsCharacters[i] = [...CharacterTemp] ;\r\n          page = 0;\r\n          num++;\r\n          over++;\r\n          CharacterTemp = [];          \r\n          let num2= num;\r\n          //cambie a num2 porq el active no lo tomaba en la paginacion al hacer click al compararse active={num2 === this.state.idChar} ya que tiene 0 por delante\r\n                if(num < 10){\r\n                  num= '0'+num;\r\n                }       \r\n          //   }\r\n            //cada vez q el estado cambie, la condicion se activara de e atributo active, si num q es la key es igual, se mostrara en la vista ya que tengo directamente el estado para que se muestre\r\n            items.push(\r\n            <Pagination.Item  key={num2} active={num2 === this.state.idChar} onClick={(e)=> this.idPage(num,active,e)}>\r\n            {num}\r\n            </Pagination.Item>,\r\n            );\r\n                  // }\r\n        }\r\n      }\r\n    )  \r\n  }\r\n  //let Dirpicture = '/public/ass'\r\n      //console.log(this.state.characters)\r\n  \r\n      return(\r\n        <div>\r\n          <button className=\"idioma\" onClick={changeLanguage}>Cambiar al ingl√©s</button>\r\n            <Suspense fallback=\"Cargando traducciones\">\r\n            \r\n            {/* <Translation>\r\n              {\r\n                t => <h1>{t('Welcome to React')}</h1>\r\n              }\r\n  \r\n            </Translation> */}             \r\n            </Suspense>\r\n            {/* <button className=\"paypal\">\r\n              <a href=\"/index\" target='_blank' class=\"myButton0a\"><small>Donar a <span class=\"paypal1\">Pay</span><span class=\"paypal2\">Pal</span> para seguir el desarrollo y las traducciones </small></a>\r\n            </button> */}\r\n            <BotonDonation></BotonDonation>\r\n            \r\n            <Container fluid style={{ backgroundColor:'rgb(127, 114, 140)', backgroundSize:'100%'}}>\r\n            <Row className='bgdiv'>\r\n                <img className='bg' src='https://www.wallpapertip.com/wmimgs/28-285102_hyuga-hinata.jpg'></img>\r\n            </Row>\r\n        <Search className='sh' CharacterFind={this.CharacterFind}/>\r\n        \r\n        \r\n        <div className='center'>\r\n              <Row className=\"justify-content-md-center\">\r\n              <Col md='auto'>\r\n              <Pagination>   \r\n                  <Row className=\"justify-content-md-center style-pagination\">\r\n                    {/* <Pagination.First />\r\n                    <Pagination.Prev/> */}\r\n                    {items.splice(0,20)}                \r\n                    {items.splice(0,20)}\r\n                    {items.splice(0,20)}\r\n                    {/* <Pagination.Next/>\r\n                    <Pagination.Last/>*/}\r\n                  </Row>           \r\n              </Pagination>\r\n              </Col>\r\n              </Row>\r\n        </div>\r\n          <Row className=\"justify-content-md-center\" > {/*centrar */}\r\n            {/* for */}\r\n            \r\n            <CardColumns>\r\n              {/**la sentencia del return tiene que estar al laodo paera que funcione */}\r\n              {/* para colocar una al lado de otra usa row y col  */}\r\n              {/* <h2>{this.state.idChar}</h2> */}\r\n              {this.state.characterfind.length > 0 ? find : itemsCharacters[this.state.idChar]}\r\n            </CardColumns>\r\n          </Row>    \r\n      </Container>\r\n  \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","C:\\Users\\silva\\Documents\\Api-Naruto-Vz\\src\\donation\\BotonDonation.js",["60","61"],"import {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass BotonDonation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n    render(){\r\n    return(\r\n        <div>          \r\n            <button className=\"paypal\">\r\n                <a className=\"paypal\" href=\"/index\" target='_blank' class=\"myButton0a\"><small>Donar a <span class=\"paypal1\">Pay</span><span class=\"paypal2\">Pal</span> para seguir el desarrollo y las traducciones </small></a>\r\n            </button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default BotonDonation;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":5,"column":24,"nodeType":"68","messageId":"69","endLine":5,"endColumn":28},{"ruleId":"70","severity":1,"message":"71","line":10,"column":3,"nodeType":"72","messageId":"73","endLine":13,"endColumn":4},{"ruleId":"66","severity":1,"message":"74","line":26,"column":15,"nodeType":"68","messageId":"69","endLine":26,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":45,"column":29,"nodeType":"77","messageId":"78","endLine":45,"endColumn":84,"fix":"79"},{"ruleId":"66","severity":1,"message":"80","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":19},{"ruleId":"66","severity":1,"message":"81","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":14},{"ruleId":"66","severity":1,"message":"82","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":12},{"ruleId":"66","severity":1,"message":"83","line":11,"column":10,"nodeType":"68","messageId":"69","endLine":11,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":64,"column":27,"nodeType":"86","messageId":"87","endLine":64,"endColumn":29},{"ruleId":"66","severity":1,"message":"88","line":79,"column":12,"nodeType":"68","messageId":"69","endLine":79,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":94,"column":3,"nodeType":"91","messageId":"92","endLine":135,"endColumn":4},{"ruleId":"93","severity":1,"message":"94","line":94,"column":39,"nodeType":"95","messageId":"96","endLine":94,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":112,"column":60,"nodeType":"86","messageId":"87","endLine":112,"endColumn":62},{"ruleId":"97","severity":1,"message":"98","line":158,"column":17,"nodeType":"77","endLine":158,"endColumn":106},{"ruleId":"66","severity":1,"message":"81","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":5,"column":5,"nodeType":"72","messageId":"73","endLine":7,"endColumn":8},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'changeLanguage' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"101","text":"102"},"'useEffect' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'withTranslation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'over' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",[2783,2791],"\"charct noreferrer\""]